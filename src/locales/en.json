{
  "auth": {
    "userWithFieldExists": "User with this {{field}} already exists",
    "serverErrorRegistration": "Server error during registration",
    "invalidCredentials": "Invalid credentials",
    "serverErrorLogin": "Server error during login",
    "serverErrorGettingUserInfo": "Server error getting user info",
    "fieldTaken": "{{field}} is already taken",
    "serverErrorUpdatingProfile": "Server error updating profile",
    "serverErrorUpdatingPreferences": "Server error updating preferences",
    "notAuthorized": "Not authorized, no token provided",
    "notAuthorizedUserNotFound": "Not authorized, user not found",
    "notAuthorizedTokenFailed": "Not authorized, token failed",
    "serverErrorAuthentication": "Server error in authentication",
    "apiKeyRequired": "API key is required",
    "userNotFound": "User not found",
    "apiKeyUpdatedSuccessfully": "API key updated successfully",
    "serverError": "Server error occurred",
    "apiKeyValidationSuccessful": "API key validation successful",
    "apiKeyValidationFailed": "API key validation failed: {{error}}",
    "apiKeyDecryptionFailed": "Failed to decrypt API key"
  },
  "words": {
    "serverErrorFetchingWords": "Server error fetching words",
    "wordAlreadyExists": "Word already exists in your collection",
    "spellingError": "Spelling error detected. Please check your word.",
    "serverErrorAddingWord": "Server error adding word",
    "wordNotFound": "Word not found",
    "serverErrorUpdatingWord": "Server error updating word",
    "wordDeletedSuccessfully": "Word deleted successfully",
    "serverErrorDeletingWord": "Server error deleting word",
    "serverErrorGettingStats": "Server error getting word statistics",
    "serverErrorGettingPartsOfSpeech": "Server error getting parts of speech",
    "serverErrorExportingWords": "Server error exporting words",
    "randomWordsLimitExceeded": "Random words count cannot exceed user's total words",
    "noWordsToGenerate": "No words available to generate random selection",
    "noAvailableWords": "No random words available that you don't already have",
    "serverErrorRandomWords": "Server error generating random words"
  },
  "generations": {
    "serverErrorGeneratingSentence": "Server error generating sentence",
    "serverErrorFetchingGenerations": "Server error fetching generations",
    "generationNotFound": "Generation not found",
    "serverErrorUpdatingGeneration": "Server error updating generation",
    "generationDeletedSuccessfully": "Generation deleted successfully",
    "serverErrorDeletingGeneration": "Server error deleting generation",
    "allGenerationsDeletedSuccessfully": "All generations deleted successfully",
    "serverErrorDeletingAllGenerations": "Server error deleting all generations",
    "alreadyLiked": "You have already liked this generation",
    "likedSuccessfully": "Generation liked successfully",
    "serverErrorLikingGeneration": "Server error liking generation",
    "notLiked": "You have not liked this generation",
    "unlikedSuccessfully": "Like removed successfully",
    "serverErrorUnlikingGeneration": "Server error removing like",
    "serverErrorGettingStats": "Server error getting generation statistics"
  },
  "aiConfig": {
    "serverErrorFetchingConfigs": "Server error fetching AI configurations",
    "configNotFound": "AI configuration not found",
    "serverErrorCreatingConfig": "Server error creating AI configuration",
    "serverErrorUpdatingConfig": "Server error updating AI configuration",
    "configDeletedSuccessfully": "AI configuration deleted successfully",
    "serverErrorDeletingConfig": "Server error deleting AI configuration",
    "serverErrorTestingConfig": "Server error testing AI configuration",
    "configTestSuccessful": "Configuration test successful",
    "configTestFailed": "Configuration test failed: {{message}}",
    "defaultConfigCreated": "Default SiliconFlow configuration created successfully"
  },
  "validation": {
    "required": "{{field}} is required",
    "invalidEmail": "Please provide a valid email address",
    "minLength": "{{field}} must be at least {{min}} characters long",
    "maxLength": "{{field}} must not exceed {{max}} characters",
    "invalidFormat": "{{field}} has invalid format",
    "invalidValue": "Invalid value for {{field}}"
  },
  "common": {
    "serverError": "Internal server error",
    "notFound": "Resource not found",
    "unauthorized": "Unauthorized access",
    "forbidden": "Access forbidden",
    "badRequest": "Bad request",
    "validationError": "Validation error",
    "success": "Operation completed successfully",
    "created": "Resource created successfully",
    "updated": "Resource updated successfully",
    "deleted": "Resource deleted successfully",
    "routeNotFound": "Route {{route}} not found"
  },
  "ai": {
    "generationFailed": "AI generation failed: {{message}}",
    "configurationError": "AI configuration error: {{message}}",
    "connectionError": "Unable to connect to AI service",
    "quotaExceeded": "AI service quota exceeded",
    "rateLimited": "Too many requests to AI service",
    "formatError": "AI response format is invalid",
    "retryAttempt": "Retry attempt {{attempt}} of {{max}}",
    "retryExceeded": "Maximum retry attempts exceeded",
    "parsingError": "Failed to parse AI response format"
  },
  "apiKey": {
    "title": "AI Configuration",
    "subtitle": "Configure your AI service settings to customize your experience. You can use our platform's API key or configure your own.",
    "platformConfiguration": "Platform Configuration",
    "platformDescription": "Our platform is currently configured with the following AI service setup:",
    "provider": "Provider",
    "model": "Model",
    "features": "Features",
    "configuration": "API Key Configuration",
    "loadingConfiguration": "Loading configuration...",
    "usePlatformKey": "Use Platform API Key",
    "platformKeyDescription": "Use our pre-configured API key for seamless experience. No setup required.",
    "recommended": "Recommended",
    "useCustomKey": "Use Custom API Key",
    "customKeyDescription": "Use your own API key for more control and potentially higher usage limits.",
    "enterYourKey": "Enter your API key",
    "keyPlaceholder": "sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
    "testKey": "Test Key",
    "saveKey": "Save Key",
    "securityNote": "Your API key will be encrypted and stored securely.",
    "currentStatus": "Current Configuration Status",
    "usingPlatformKey": "Using platform API key",
    "usingCustomKey": "Using custom API key",
    "customKeyNotSet": "Custom API key not configured yet",
    "testSuccessful": "API key test successful! The key is working correctly.",
    "testFailed": "API key test failed. Please check your key and try again.",
    "saveSuccessful": "API key saved successfully!",
    "saveFailed": "Failed to save API key. Please try again.",
    "existingKeyHint": "You have an existing API key configured. Leave empty to keep current key, or enter a new one to replace it.",
    "fontSettingsUpdatedSuccessfully": "Font settings updated successfully",
    "serverErrorUpdatingFontSettings": "Server error updating font settings"
  }
} 